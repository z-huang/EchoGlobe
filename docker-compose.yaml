version: '3.8'

name: echoglobe
services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=myproject.settings
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
      whisper:
        condition: service_started

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  nginx:
    image: nginx:stable
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 2

  s3:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # S3 API port
      - "9001:9001" # Management UI
    volumes:
      - minio_data:/data
    env_file:
      - .env
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 2

  whisper:
    build: ./whisper
    volumes:
      - ./whisper:/app
    ports:
      - "9000:9000"
    environment:
      - WHISPER_MODEL_SIZE=base
      - WHISPER_LANGUAGE=en
      - WHISPER_TASK=transcribe
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  postgres_data:
  minio_data:
